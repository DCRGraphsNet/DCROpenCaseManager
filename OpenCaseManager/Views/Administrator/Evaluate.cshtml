
@{
    ViewBag.Title = "Evaluate";
    ViewBag.IsLandingPage = true;
}

<style>
    header {
        display: none;
    }

    .footer {
        display: none;
    }
</style>
<div class="formEvaluateWrapper">
    <form class="form-evaluate">
        <h3 id="launchTestHeader">Launch Test Case</h3>
        <h4 id="launchTestDates">
            Launch Test Case</h3>
            <div class="form-group">
                <label for="enterNameLabel"><span data-locale data-apply="text" data-key="EnterName">Enter Name</span></label>
                <div class="inputWrapper">
                    <input type="text" class="form-control" id="enterNameLabel" autofocus>
                    <label id="nameError" class="error"></label>
                </div>
            </div>
            <div class="form-group">
                <label for="enterEmail"><span data-locale data-apply="text" data-key="EnterEmail">Enter Email</span></label>
                <div class="inputWrapper">
                    <input type="text" class="form-control" id="enterEmail" autofocus>
                    <label id="emailError" class="error"></label>
                </div>
            </div>
            <button type="button" id="launchTestCaseSubmit" data-key="Launch" class="btn btn-info">
                <span data-locale
                      data-apply="text" data-key="Launch">Launch</span>
            </button>
    </form>
</div>

<script type="text/javascript">
    $(document).ready(function () {
        var guid = getParameterByName("id", window.location.href);
        getMyTestCase(guid);
        launchTestCase(guid);
        $(document).keypress(function(e) {
            if(e.which == 13) {
                $('#launchTestCaseSubmit').click();
            }
        });
    });

    function isVaidEmail(email) {
        var regex = /^([a-zA-Z0-9_\.\-\+])+\@@(([a-zA-Z0-9\-])+\.)+([a-zA-Z0-9]{2,4})+$/;
        return regex.test(email);
    }
    

    function launchTestCase(guid) {
        $('#launchTestCaseSubmit').on('click', function (e) {
            var email = $('#enterEmail').val(),
                name = $('#enterNameLabel').val();
            if (!name) {
                // TODO: ahmed add translation here
                $('#nameError').html("Please enter name");
                $('#enterNameLabel').focus();
                return false;
            } else {
                $('#nameError').html("");
            }
            if (!email) {
                // TODO: ahmed add translation here
                $('#emailError').html("Please enter an email");
                $('#enterEmail').focus();
                return false;
            } if (!isVaidEmail(email)) {
                $('#emailError').html("Please enter valid email");
                $('#enterEmail').focus();
                return false;
            } else {
                $('#emailError').html("");
            }

            launchTestCaseApi({
                email,
                name,
                guid
            });
        });
    }

    function getParameterByName(name, url) {
        if (!url) url = window.location.href;
        url = url.toLowerCase();
        name = name.toLowerCase();
        name = name.replace(/[\[\]]/g, "\\$&");
        var regex = new RegExp("[?&]" + name + "(=([^&#]*)|&|#|$)"),
            results = regex.exec(url);
        if (!results) return null;
        if (!results[2]) return '';
        return decodeURIComponent(results[2].replace(/\+/g, " "));
    }

    function getMyTestCase(guid) {
        API.serviceGET('records/getMyTestCase?id=' + guid)
            .done(function (response) {
                var data = JSON.parse(response);
                var html = '';
                if (guid != null && data.length != 0) {
                    var f = moment(new Date(data[0].ValidFrom)).format('L');
                    var t = moment(new Date(data[0].ValidTo)).format('L');
                    $('#launchTestHeader').html(data[0].Title);
                    $('#launchTestDates').html(f + ' - ' + t);
                }
            })
            .fail(function (e) {
                showExceptionErrorMessage(e);
            });
    }

    function launchTestCaseApi(data) {
        API.service('records/launchTestCase', data)
            .done(function (response) {
                console.log(response);
                var instanceId = JSON.parse(response)
                showSuccessMessage('Success');
                window.location.href = '/administrator/launchinstance?id=' + instanceId
            })
            .fail(function (e) {
                showErrorMessage(e.responseJSON.ExceptionMessage);
                console.log(e);
            });
    }

    function showSuccessMessage(message) {
        new Noty({
            type: 'success',
            theme: 'mint',
            layout: 'topRight',
            text: message,
            timeout: 5000,
            container: '.custom-container'
        }).show();
    }

    function showErrorMessage(message) {
        var errorMessage = '';
        try {
            errorMessage = JSON.parse(message);
        }
        catch (ex) {
            errorMessage = message;
        }

        if (typeof (errorMessage) === "string")
            new Noty({
                type: 'error',
                theme: 'mint',
                layout: 'topRight',
                text: errorMessage,
                timeout: 5000,
                container: '.custom-container'
            }).show();
        else {
            showExceptionErrorMessage(errorMessage);
        }
    }

    function showExceptionErrorMessage(exception) {
        var message = '';
        if (exception.ExceptionMessage !== undefined) {
            message = exception.ExceptionMessage;
        }
        else if (exception.Message !== undefined) {
            message = exception.Message;
        }
        else if (exception.responseJSON !== undefined) {
            try {
                message = exception.responseJSON.ExceptionMessage;
            }
            catch (e) {
                if (exception.responseJSON.Message !== undefined) {
                    message = exception.responseJSON.Message;
                }
                else if (exception.responseText !== undefined) {
                    message = exception.responseText;
                }
                else {
                    message = 'An error occured. Check Log to see the details';
                }
            }
        }
        else {
            message = exception.responseText;
        }

        new Noty({
            type: 'error',
            theme: 'mint',
            layout: 'topRight',
            text: message,
            timeout: 5000,
            container: '.custom-container'
        }).show();

    }
</script>


