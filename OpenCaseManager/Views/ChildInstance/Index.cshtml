<style>
    #instanceTitle .dot {
        margin-left: 20px;
        height: 25px;
        width: 25px;
    }
</style>
@{
    ViewBag.Title = "Instance"; //This will be overwritten when the page is fully loaded
}


<div class="addDocumentModal">
    @Html.Partial("~/Views/PartialViews/AddDocumentModal.cshtml")
</div>

<div class="wholeActionsPage">
    <input type="hidden" id="childIdHidden">
    <input type="hidden" id="instanceIdHidden">
    <div class="buttonsBox">
        @Html.Partial("~/Views/PartialViews/AddButton.cshtml", new ViewDataDictionary { { "add-text", "AddDocument" }, { "onClick", "addDocument()" } })
        @Html.Partial("~/Views/PartialViews/AddButton.cshtml", new ViewDataDictionary { { "add-text", "AddJournalNote" }, { "onClick", "CreateJournalNoteViewInstance()" } })
    </div>

    <div class="tabsBox">
        <nav aria-label="breadcrumb" class="breadcrumbsNavigation">
            <ol class="breadcrumb arr-right bg-dark ">
                <li class="breadcrumb-item  "><a href="~/">Mine Børn</a></li>
                <li class="breadcrumb-item "><a href="" id="childLink"></a></li>
                <li class="breadcrumb-item active instance" aria-current="page"></li>
            </ol>
        </nav>
        <table class="table table-responsive entityDetailTable">
            <tr>
                <th class="caseTitle"><span id="instanceTitle"></span></th>
            </tr>
        </table>
        <div>
            <ul class="nav nav-pills mb-3" id="pills-tab" role="tablist">
                <li class="nav-item active">
                    <a class="nav-link" id="pills-activitiesb" data-toggle="tab" href="#pills-activities" role="tab" aria-controls="pills-activities" aria-selected="false"><span data-locale data-apply="text" data-key="Activities"></span></a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" id="pills-document-tab" data-toggle="tab" href="#pills-document" role="tab" aria-controls="pills-document" aria-selected="false"><span data-locale data-apply="text" data-key="Documents"></span></a>
                </li>
            </ul>
            <div class="tab-content" id="pills-tabContent">
                <div class="tab-pane fade in active" id="pills-activities" role="tabpanel" aria-labelledby="pills-activities">
                    @Html.Partial("~/Views/PartialViews/Tasks.cshtml")
                </div>
                <div class="tab-pane fade in" id="pills-document" role="tabpanel" aria-labelledby="pills-document">
                    @Html.Partial("~/Views/PartialViews/Document.cshtml")
                </div>
            </div>
        </div>
    </div>

    <div class="stamdataBox">
        @Html.Partial("~/Views/PartialViews/Stamdata.cshtml")
    </div>
</div><!-- Row Div End -->


<script src="~/Scripts/instance.js"></script>
<script src="~/Scripts/breadcrumbs.js"></script>


<script type="text/javascript">
    var webPortalType = "Instance";
    var instanceId = getParameterByName("id", window.location.href);
    $('#instanceIdHidden').val(instanceId);

    function getParameterByName(name, url) {
        if (!url) url = window.location.href;
        name = name.replace(/[\[\]]/g, "\\$&");
        var regex = new RegExp("[?&]" + name + "(=([^&#]*)|&|#|$)"),
            results = regex.exec(url);
        if (!results) return null;
        if (!results[2]) return '';
        return decodeURIComponent(results[2].replace(/\+/g, " "));
    }
    // Checks if InstanceTitle has been set every 100 milliseconds, and sets the title of the tab to the InstanceTitle when it is set.
    $(window).ready(function () {
        var i = setInterval(function () {
            var tabTitle = $('#instanceTitle').text();
            if (tabTitle.length != 0) {
                clearInterval(i);
                // safe to execute your code here
                $('head title', window.parent.document).text(tabTitle);
            }
        }, 100);
        getChildId(App.getParameterByName("id", window.location.href));

    });
    function getChildId(instanceId) {
        var query = {
            "type": "SELECT",
            "entity": "InstanceExtension",
            "filters": [
                {
                    "column": "InstanceId",
                    "operator": "equal",
                    "value": instanceId,
                    "valueType": "int",
                    "logicalOperator": "and"
                }
            ],
            "resultSet": ["Id","ChildId"],
            "order": [{ "column": "Id", "descending": false }]
        }
        API.service('records', query)
            .done(function (response) {
                var childInfo = $.parseJSON(response)[0];
                $('#childIdHidden').val(childInfo.ChildId);
            });
    }
    
</script>

<script src="~/Scripts/task.js"></script>
<script src="~/Scripts/journalNote.js" type="text/javascript"></script>
<script src="~/Scripts/addDocument.js" type="text/javascript"></script>